local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local animatronics = {
    ["ToyChica"] = { color = Color3.fromRGB(255, 255, 0), npcName = "ToyChicaNPC" },
    ["ToyFreddy"] = { color = Color3.fromRGB(139, 69, 19), npcName = "ToyFreddyNPC" },
    ["ToyBonnie"] = { color = Color3.fromRGB(170, 0, 255), npcName = "ToyBonnieNPC" },
    ["ToyFoxy"] = { color = Color3.fromRGB(255, 69, 0), npcName = "ToyFoxyNPC" },
}

local espEnabled = {}
local highlights = {}

-- ScreenGui
local ScreenGui = Instance.new("ScreenGui", game.CoreGui)
ScreenGui.Name = "AnimatronicESP_GUI"

-- Tombol Menu (draggable)
local menuButton = Instance.new("TextButton", ScreenGui)
menuButton.Size = UDim2.new(0, 100, 0, 30)
menuButton.Position = UDim2.new(0, 20, 0, 20)
menuButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
menuButton.TextColor3 = Color3.new(1,1,1)
menuButton.Text = "Menu"
menuButton.Font = Enum.Font.Arcade
menuButton.TextSize = 14

-- Function draggable
local function makeDraggable(frame)
    frame.Active = true
    local dragging, dragInput, startPos, dragStart = false, nil, nil, nil
    local function update(input)
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(0, startPos.X.Offset + delta.X, 0, startPos.Y.Offset + delta.Y)
    end
    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)
end
makeDraggable(menuButton)

-- Frame Menu (initially hidden)
local frame = Instance.new("Frame", ScreenGui)
frame.Size = UDim2.new(0, 200, 0, 250)
frame.Position = UDim2.new(0, 20, 0, 60)
frame.BackgroundColor3 = Color3.fromRGB(25,25,25)
frame.Visible = false -- start hidden

local title = Instance.new("TextLabel", frame)
title.Size = UDim2.new(1,0,0,30)
title.Text = "Animatronic ESP"
title.TextColor3 = Color3.new(1,1,1)
title.BackgroundColor3 = Color3.fromRGB(40,40,40)
title.Font = Enum.Font.Arcade
title.TextSize = 16

-- Scrollable menu
local scrollFrame = Instance.new("ScrollingFrame", frame)
scrollFrame.Size = UDim2.new(1,0,1,-40)
scrollFrame.Position = UDim2.new(0,0,0,30)
scrollFrame.BackgroundTransparency = 1
scrollFrame.BorderSizePixel = 0
scrollFrame.CanvasSize = UDim2.new(0,0,0,0)
scrollFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y

local uiListLayout = Instance.new("UIListLayout", scrollFrame)
uiListLayout.Padding = UDim.new(0,5)
uiListLayout.SortOrder = Enum.SortOrder.LayoutOrder

-- ESP Buttons
for name, info in pairs(animatronics) do
    espEnabled[name] = true
    local btn = Instance.new("TextButton", scrollFrame)
    btn.Size = UDim2.new(1,-10,0,30)
    btn.Position = UDim2.new(0,5,0,0)
    btn.BackgroundColor3 = info.color
    btn.Text = "Toggle "..name.." [ON]"
    btn.TextColor3 = Color3.new(0,0,0)
    btn.Font = Enum.Font.Arcade
    btn.TextSize = 14

    btn.MouseButton1Click:Connect(function()
        espEnabled[name] = not espEnabled[name]
        btn.Text = "Toggle "..name..(espEnabled[name] and " [ON]" or " [OFF]")
        if highlights[name] then highlights[name].Enabled = espEnabled[name] end
    end)
end

-- Klik tombol menu â†’ toggle frame
menuButton.MouseButton1Click:Connect(function()
    frame.Visible = not frame.Visible
end)

-- RenderStepped ESP
RunService.RenderStepped:Connect(function()
    local animFolder = workspace:FindFirstChild("Animatronics")
    if not animFolder then return end
    for name, info in pairs(animatronics) do
        local folder = animFolder:FindFirstChild(name)
        if folder then
            local npc = folder:FindFirstChild(info.npcName)
            if npc and not highlights[name] then
                local highlight = Instance.new("Highlight")
                highlight.FillTransparency = 0.4
                highlight.OutlineTransparency = 0
                highlight.FillColor = info.color
                highlight.OutlineColor = Color3.new(0,0,0)
                highlight.Adornee = npc
                highlight.Enabled = espEnabled[name]
                highlight.Parent = npc
                highlights[name] = highlight
            elseif npc and highlights[name] then
                highlights[name].Adornee = npc
            end
        end
    end
end)
        sound:Play()
    else
        sound.Loaded:Wait()
        sound:Play()
    end
end

-- Draggable function
local function makeDraggable(frame, dragHandle)
    dragHandle = dragHandle or frame
    dragHandle.Active = true

    local dragging = false
    local dragInput, dragStart, startPos

    local function update(input)
        local delta = input.Position - dragStart
        local newPos = UDim2.new(
            0,
            math.clamp(startPos.X.Offset + delta.X, 0, workspace.CurrentCamera.ViewportSize.X - frame.AbsoluteSize.X),
            0,
            math.clamp(startPos.Y.Offset + delta.Y, 0, workspace.CurrentCamera.ViewportSize.Y - frame.AbsoluteSize.Y)
        )
        frame.Position = newPos
    end

    dragHandle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    dragHandle.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)
end

-- Loading Frame
local loadingFrame = Instance.new("Frame", ScreenGui)
loadingFrame.Size = UDim2.new(1, 0, 1, 0)
loadingFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)

local loadingText = Instance.new("TextLabel", loadingFrame)
loadingText.Size = UDim2.new(1, 0, 1, 0)
loadingText.Text = "Loading ESP..."
loadingText.TextColor3 = Color3.fromRGB(255, 255, 0)
loadingText.Font = Enum.Font.Arcade
loadingText.TextScaled = true
loadingText.BackgroundTransparency = 1

task.wait(2)
TweenService:Create(loadingFrame, TweenInfo.new(1, Enum.EasingStyle.Quad), {BackgroundTransparency = 1}):Play()
TweenService:Create(loadingText, TweenInfo.new(1, Enum.EasingStyle.Quad), {TextTransparency = 1}):Play()
task.wait(1)
loadingFrame:Destroy()

-- Main Frame
local frame = Instance.new("Frame", ScreenGui)
frame.Size = UDim2.new(0, 200, 0, 250)
frame.Position = UDim2.new(0, 20, 0, 60)
frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
frame.BorderSizePixel = 0
frame.ClipsDescendants = true

local title = Instance.new("TextButton", frame)
title.Size = UDim2.new(1, 0, 0, 30)
title.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
title.Text = "Animatronic ESP (Click to Toggle)"
title.TextColor3 = Color3.new(1, 1, 1)
title.Font = Enum.Font.Arcade
title.TextSize = 16
makeDraggable(frame, title)

local versionLabel = Instance.new("TextLabel", frame)
versionLabel.Size = UDim2.new(1, 0, 0, 20)
versionLabel.Position = UDim2.new(0, 0, 0, 30)
versionLabel.BackgroundTransparency = 1
versionLabel.Text = "Version 1.0"
versionLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
versionLabel.Font = Enum.Font.Arcade
versionLabel.TextSize = 14

-- Scrollable menu
local scrollFrame = Instance.new("ScrollingFrame", frame)
scrollFrame.Size = UDim2.new(1, 0, 1, -100) -- sisain space buat tombol close
scrollFrame.Position = UDim2.new(0, 0, 0, 50)
scrollFrame.BackgroundTransparency = 1
scrollFrame.BorderSizePixel = 0
scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
scrollFrame.ScrollBarThickness = 6
scrollFrame.VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar
scrollFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y

local uiListLayout = Instance.new("UIListLayout", scrollFrame)
uiListLayout.Padding = UDim.new(0, 5)
uiListLayout.SortOrder = Enum.SortOrder.LayoutOrder

-- ESP toggle buttons
for name, info in pairs(animatronics) do
    espEnabled[name] = true
    local button = Instance.new("TextButton", scrollFrame)
    button.Size = UDim2.new(1, -10, 0, 30)
    button.BackgroundColor3 = info.color
    button.Text = "Toggle " .. name .. " [ON]"
    button.TextColor3 = Color3.new(0, 0, 0)
    button.Font = Enum.Font.Arcade
    button.TextSize = 16

    button.MouseButton1Click:Connect(function()
        espEnabled[name] = not espEnabled[name]
        button.Text = "Toggle " .. name .. (espEnabled[name] and " [ON]" or " [OFF]")
        playClick()
        if highlights[name] then
            highlights[name].Enabled = espEnabled[name]
        end
    end)
end

-- Close button di bawah menu
local closeMenuButton = Instance.new("TextButton", frame)
closeMenuButton.Size = UDim2.new(1, -10, 0, 30)
closeMenuButton.Position = UDim2.new(0, 5, 1, -40)
closeMenuButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
closeMenuButton.TextColor3 = Color3.new(1, 1, 1)
closeMenuButton.Text = "Close ESP"
closeMenuButton.Font = Enum.Font.Arcade
closeMenuButton.TextSize = 16

closeMenuButton.MouseButton1Click:Connect(function()
    playClick()
    -- force stop script
    for _, conn in pairs(connections) do
        if conn then conn:Disconnect() end
    end
    for _, hl in pairs(highlights) do
        if hl then hl:Destroy() end
    end
    if ScreenGui then ScreenGui:Destroy() end
end)

-- Toggle menu via header
local menuVisible = true
local openSize = UDim2.new(0, 200, 0, 250)
local closedSize = UDim2.new(0, 200, 0, 50)

title.MouseButton1Click:Connect(function()
    playClick()
    menuVisible = not menuVisible
    local goal = {Size = menuVisible and openSize or closedSize}
    TweenService:Create(frame, TweenInfo.new(0.35, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), goal):Play()
end)

-- RenderStepped ESP
connections.RenderStepped = RunService.RenderStepped:Connect(function()
    local animFolder = workspace:FindFirstChild("Animatronics")
    if not animFolder then return end

    for name, info in pairs(animatronics) do
        local folder = animFolder:FindFirstChild(name)
        if folder then
            local npc = folder:FindFirstChild(info.npcName)
            if npc and not highlights[name] then
                local highlight = Instance.new("Highlight")
                highlight.Name = name .. "_Highlight"
                highlight.FillTransparency = 0.4
                highlight.OutlineTransparency = 0
                highlight.FillColor = info.color
                highlight.OutlineColor = Color3.new(0, 0, 0)
                highlight.Adornee = npc
                highlight.Enabled = espEnabled[name]
                highlight.Parent = npc
                highlights[name] = highlight
            elseif npc and highlights[name] then
                highlights[name].Adornee = npc
            end
        end
    end
end)

connections.RenderStepped2 = RunService.RenderStepped:Connect(function() -- update canvas size
    scrollFrame.CanvasSize = UDim2.new(0, 0, 0, uiListLayout.AbsoluteContentSize.Y)
end)
